syntax = "proto3";
package protobuf;

import "google/protobuf/timestamp.proto";

option go_package = "./messages_proto";

// Сообщение.
// Сообщение должно содержать идентификатор, время отправки и текст.
message Message {
    int64 id = 1;
    google.protobuf.Timestamp created_at = 2;
    string text = 3;
}

message Empty {}

// Описание службы gRPC.
service Signalman {
  rpc Messages (Empty) returns (stream Message) {}
  rpc Send (Message) returns (Empty) {}
}

// Установка
// go get -u github.com/golang/protobuf/{proto,protoc-gen-go} 
// go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
// Запуск
// Из каталога Lesson_14-RPC:
// PB: "protoc -I . --go_out=./ ./messages_proto/messages.proto"
// gRPC: "protoc --go_out=./ --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative messages_proto/messages.proto"
